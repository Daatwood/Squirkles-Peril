    //
//  ButtonViewController.m
//  BadBadMonkey
//
//  Created by Dustin Atwood on 6/20/10.
//  Copyright 2010 Litlapps. All rights reserved.
//

#import "LoadingViewController.h"
#import "EAGLView.h"

@implementation LoadingViewController
BOOL loadingScreenStarted;

/*/
 While the application is loading itself into memory display a default image,
 Once the application is loaded take that default image and set it as the
 background of the application. Then display a progress circle until the
 splash screen is loaded then display it for 3 seconds or until a touch is
 recieved at which point remove the splash screen and display a loading screen
 with a progress circle again then begin loading the glView. Once glView is
 loaded remove the loading screen. At which point the current view stacks should
 be Window->This->glView. This begining the main view controller of the application.
 Followed by glView which has a game view controller managing everything under that.
/*/

// Begin loading the hierachy of screens to be displayed,
- (void)loadView 
{
	[super loadView];
	
	// Set the default color of the view to black, for loading screen purposes
	[self.view setBackgroundColor:[UIColor blackColor]];
	loadingScreenStarted = NO;
	// Setup and display the background image, for preloading screen purposes
	//backgroundImage = [[UIImage alloc] initWithContentsOfFile:[[[NSBundle mainBundle] resourcePath] stringByAppendingPathComponent:@"Splashscreen.png"]];
	//[self.view addSubview:backgroundImage];
	
	// Setup and display the progress circle, for various loading areas
	loadingView = [[[UIActivityIndicatorView alloc]initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhite] autorelease];
	[loadingView setBackgroundColor:[UIColor clearColor]];
	loadingView.frame = CGRectMake(200, 170, 25, 25);
	loadingView.tag  = 1;
	[loadingView setHidesWhenStopped:YES];
	[self.view addSubview:loadingView];
	// Begin animating because soon the splash screen will be loaded. Once loaded will stop animating
	[loadingView startAnimating];
	
	loadingLabel = [[UILabel alloc] initWithFrame:CGRectMake(320 / 2 - 40, 480 - 325, 80, 50)];
	[loadingLabel setText:@"Loading"]; 
	[loadingLabel setTextColor:[UIColor whiteColor]];
	[loadingLabel setBackgroundColor:[UIColor blackColor]];
	
	[self.view addSubview:loadingLabel];
}

// Setup and display the Splashscreen
- (void) displaySplashScreen
{
	NSLog(@"Displaying Splash Screen");
	// Init the splashScreen
	splashScreen = [[UIButton alloc] initWithFrame:CGRectMake(0, 0, 320, 480)];
	// If pressed early just hide it.
	[splashScreen addTarget:self action:@selector(hideSplashScreen) forControlEvents:UIControlEventAllEvents];
	[splashScreen setBackgroundImage:[UIImage imageWithContentsOfFile:
									  [[[NSBundle mainBundle] resourcePath] stringByAppendingPathComponent:@"Splashscreen.png"]] forState:UIControlStateNormal];
	//[splashScreen setBackgroundColor:[UIColor blueColor]];
	// Add to view
	[self.view addSubview:splashScreen];
	// Once timer finishes the splash screen will be removed
	[NSTimer scheduledTimerWithTimeInterval:5.0f target:self selector:@selector(removeSplashScreen) userInfo:nil repeats:NO];
	// Splash screen is loaded stop animating
	[loadingView stopAnimating];
}

- (void) hideSplashScreen
{
	if(![splashScreen isHidden])
	{
		NSLog(@"Hiding Splash Screen");
		[splashScreen setHidden:YES];
		[self displayLoadingScreen];
	}
}

- (void) removeSplashScreen
{
	NSLog(@"Removing Splash Screen");
	[splashScreen removeFromSuperview];
	[self displayLoadingScreen];
}

- (void) displayLoadingScreen
{
	// Make sure the glView can only be loaded ONCE
	if(!loadingScreenStarted)
	{
		NSLog(@"Displaying Loading Screen");
		//[backgroundImage setHidden:YES];
		[self.view bringSubviewToFront:loadingView];
		[loadingView startAnimating];
		loadingScreenStarted = TRUE;
		[NSTimer scheduledTimerWithTimeInterval:0.5f target:self selector:@selector(startGlView) userInfo:nil repeats:NO];
	}
}

- (void) startGlView
{
	CFTimeInterval startTime = CFAbsoluteTimeGetCurrent();
	glView = [[[EAGLView alloc] initWithFrame:[UIScreen mainScreen].bounds] retain];
	[glView performSelectorOnMainThread:@selector(mainGameLoop) withObject:nil waitUntilDone:NO];
	[self.view addSubview:glView];
	// view is loaded stop loading circle and remove it completely
	[loadingView stopAnimating];
	[loadingView removeFromSuperview];
	
	CFTimeInterval finishTime = CFAbsoluteTimeGetCurrent();
	NSLog(@"OpenGl Screen took %f seconds.", finishTime - startTime);
}

- (void)didReceiveMemoryWarning {
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

- (void)viewDidUnload {
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}


- (void)dealloc {
    [super dealloc];
}


@end
